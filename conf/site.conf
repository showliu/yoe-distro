# site.conf is used for configuration settings that are checked into git,
# and are used by the entire team. For settings that are unique to a machine
# or user, and are not stored in git, please use local.conf.

# CONF_VERSION is increased each time build/conf/ changes incompatibly
CONF_VERSION = "1"

# Modify the following if you need to change the types of images generated
# most of the time, this is set by the machine conf or in a custom image
# recipe.
IMAGE_FSTYPES += "wic.xz wic.bmap tar.xz"
IMAGE_FSTYPES:remove:qemuall = "tar.bz2 tar.xz tar tar.gz wic.xz wic.bmap"

DISTRO = "yoe"
#YOE_PROFILE ?= "yoe-glibc-busyboxinit-eglfs"

# Select the application supervisory system when using meta-sysinit
#
#SUPERVISION_TYPE = "s6"
#PREFERRED_PROVIDER_virtual/supervision = "s6"

# Dont package kernel into image
RDEPENDS:${KERNEL_PACKAGE_NAME}-base = ""

EXTRA_IMAGE_FEATURES = "debug-tweaks"

# Define a feedserver template to be part of rootfs
PACKAGE_FEED_URIS ??= "http://10.0.0.10:8000"
# eSDK update mechanism for end-users
SDK_UPDATE_URL ??= "http://10.0.0.10:8000"
#
# Qemu configuration
#
# By default native qemu will build with a builtin VNC server where graphical output can be
# seen. The line below enable the SDL backend too. By default libsdl2-native will
# be built, if you want to use your host's libSDL instead of the minimal libsdl built
# by libsdl2-native then uncomment the ASSUME_PROVIDED line below.
#PACKAGECONFIG:append:pn-qemu-system-native = " sdl"
#ASSUME_PROVIDED += "libsdl2-native"

# use kvm with x86/x86_64 qemu
QEMU_USE_KVM = "1"
# Launch vnc backend during testing
TEST_RUNQEMUPARAMS = "publicvnc"

# Enable llvm-pipe
#PACKAGECONFIG_append_pn-mesa_qemux86 = " gallium-llvm"
#PACKAGECONFIG_append_pn-mesa_qemux86-64 = " gallium-llvm"

# Enable serial console on Raspberry PI systems
ENABLE_UART = "1"

# disable emitting console getty when UART is disabled
# by disabling ENABLE_UART, this can end up with messages
# Getty spawning too fast...
#
#SERIAL_CONSOLE:rpi = ""

# Yoe Updater Supported Machines ( RPI, beaglebone, C4, SAMA5D27 for now )
INITRAMFS_IMAGE_BUNDLE:rpi = "1"
INITRAMFS_IMAGE_BUNDLE:beaglebone = "1"
INITRAMFS_IMAGE_BUNDLE:odroid-c4-hardkernel = "1"
INITRAMFS_IMAGE_BUNDLE:sama5d27-som1-ek-sd = "1"

# Use yoe-initramfs-image for initramfs
INITRAMFS_IMAGE = "${@bb.utils.contains('INITRAMFS_IMAGE_BUNDLE', '1', 'yoe-initramfs-image', '', d)}"
# Use kernel+initramfs image to boot
IMAGE_BOOT_FILES:remove = "${@bb.utils.contains('INITRAMFS_IMAGE_BUNDLE', '1', '${KERNEL_IMAGETYPE}', '', d)}"
IMAGE_BOOT_FILES:append = "${@bb.utils.contains('INITRAMFS_IMAGE_BUNDLE', '1', ' ${KERNEL_IMAGETYPE}-initramfs-${MACHINE}.bin;${KERNEL_IMAGETYPE}', '', d)}"

# rpi (when not using u-boot )
IMAGE_BOOT_FILES:remove:rpi = "${@bb.utils.contains('INITRAMFS_IMAGE_BUNDLE', '1', '${KERNEL_IMAGETYPE};${SDIMG_KERNELIMAGE}', '', d)}"
IMAGE_BOOT_FILES:remove:rpi = "${@bb.utils.contains('INITRAMFS_IMAGE_BUNDLE', '1', ' ${KERNEL_IMAGETYPE}-initramfs-${MACHINE}.bin;${KERNEL_IMAGETYPE}', '', d)}"
IMAGE_BOOT_FILES:append:rpi = "${@bb.utils.contains('INITRAMFS_IMAGE_BUNDLE', '1', ' ${KERNEL_IMAGETYPE}-initramfs-${MACHINE}.bin;${SDIMG_KERNELIMAGE}', '', d)}"

IMG_VERSION = "0.0.1"
#####################################################################
# add project specific configuration below this line
#####################################################################
#require conf/distro/include/lto.inc
#DISTRO_FEATURES:append = " lto"
# set max loadavg equal to nr of cpus, same at 1.0 on 1 cpu machine
#PARALLEL_MAKE:append = " \
#-l ${@int(os.sysconf(os.sysconf_names['SC_NPROCESSORS_ONLN'])) * 150/100} \
#"
